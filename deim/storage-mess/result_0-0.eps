%!PS-Adobe-2.0 EPSF-2.0
%%Title: result_0-0.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Thu Dec 24 02:47:27 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 230
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 338 50 lineto 338 230 lineto 50 230 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (result_0-0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Dec 24 02:47:27 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5760.00 3600.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
784 512 M
63 0 V
2833 0 R
-63 0 V
stroke
688 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
/vshift -53 def
1.000 UL
LTb
LCb setrgbcolor
784 920 M
63 0 V
2833 0 R
-63 0 V
stroke
688 920 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
784 1328 M
63 0 V
2833 0 R
-63 0 V
stroke
688 1328 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
784 1736 M
63 0 V
2833 0 R
-63 0 V
stroke
688 1736 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
784 2143 M
63 0 V
2833 0 R
-63 0 V
stroke
688 2143 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
784 2551 M
63 0 V
2833 0 R
-63 0 V
stroke
688 2551 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 800)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
784 2959 M
63 0 V
2833 0 R
-63 0 V
stroke
688 2959 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 900)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
847 512 M
0 31 V
0 2416 R
0 -31 V
918 512 M
0 31 V
0 2416 R
0 -31 V
980 512 M
0 31 V
0 2416 R
0 -31 V
1035 512 M
0 31 V
0 2416 R
0 -31 V
1084 512 M
0 63 V
0 2384 R
0 -63 V
stroke
1084 352 M
[ [(Helvetica) 160.0 0.0 true true 0 (10)]
[(Helvetica) 128.0 80.0 true true 0 (6)]
] -69.3 MCshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1406 512 M
0 31 V
0 2416 R
0 -31 V
1594 512 M
0 31 V
0 2416 R
0 -31 V
1727 512 M
0 31 V
0 2416 R
0 -31 V
1831 512 M
0 31 V
0 2416 R
0 -31 V
1916 512 M
0 31 V
0 2416 R
0 -31 V
1987 512 M
0 31 V
0 2416 R
0 -31 V
2049 512 M
0 31 V
0 2416 R
0 -31 V
2104 512 M
0 31 V
0 2416 R
0 -31 V
2153 512 M
0 63 V
0 2384 R
0 -63 V
stroke
2153 352 M
[ [(Helvetica) 160.0 0.0 true true 0 (10)]
[(Helvetica) 128.0 80.0 true true 0 (7)]
] -69.3 MCshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2474 512 M
0 31 V
0 2416 R
0 -31 V
2663 512 M
0 31 V
0 2416 R
0 -31 V
2796 512 M
0 31 V
0 2416 R
0 -31 V
2900 512 M
0 31 V
0 2416 R
0 -31 V
2984 512 M
0 31 V
0 2416 R
0 -31 V
3056 512 M
0 31 V
0 2416 R
0 -31 V
3118 512 M
0 31 V
0 2416 R
0 -31 V
3173 512 M
0 31 V
0 2416 R
0 -31 V
3222 512 M
0 63 V
0 2384 R
0 -63 V
stroke
3222 352 M
[ [(Helvetica) 160.0 0.0 true true 0 (10)]
[(Helvetica) 128.0 80.0 true true 0 (8)]
] -69.3 MCshow
/Helvetica findfont 160 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3543 512 M
0 31 V
0 2416 R
0 -31 V
stroke
LTB
LCb setrgbcolor
784 2959 N
784 512 L
2896 0 V
0 2447 V
-2896 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
152 1735 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (write throughput [KiB/s])]
] -53.3 MCshow
grestore
/Helvetica findfont 160 scalefont setfont
LTb
LCb setrgbcolor
2232 112 M
[ [(Helvetica) 160.0 0.0 true true 0 (sync size [B])]
] -53.3 MCshow
/Helvetica findfont 160 scalefont setfont
LTb
LCb setrgbcolor
2232 3359 M
[ [(Helvetica) 160.0 0.0 true true 0 (DCPMM performance \(Not-Interleaved\),)]
] -53.3 MCshow
/Helvetica findfont 160 scalefont setfont
2232 3199 M
[ [(Helvetica) 160.0 0.0 true true 0 (log_size=524288B, node0->0)]
] -53.3 MCshow
/Helvetica findfont 160 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
LCb setrgbcolor
5024 2879 M
[ [(Helvetica) 160.0 0.0 true true 0 (mmap, Nth=1)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
5120 2879 M
447 0 V
784 1537 M
322 -131 V
322 -24 V
321 -47 V
322 -37 V
322 25 V
322 -108 V
3036 810 L
3358 681 L
322 -95 V
784 1537 Pls
1106 1406 Pls
1428 1382 Pls
1749 1335 Pls
2071 1298 Pls
2393 1323 Pls
2715 1215 Pls
3036 810 Pls
3358 681 Pls
3680 586 Pls
5343 2879 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.93 0.00 0.93 C
LCb setrgbcolor
5024 2719 M
[ [(Helvetica) 160.0 0.0 true true 0 (mmap, Nth=2)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UP
1.000 UL
LTb
0.93 0.00 0.93 C
5120 2719 M
447 0 V
784 2043 M
322 -205 V
322 -73 V
321 33 V
322 -119 V
322 -232 V
2715 886 L
3036 761 L
322 -68 V
322 -75 V
784 2043 Crs
1106 1838 Crs
1428 1765 Crs
1749 1798 Crs
2071 1679 Crs
2393 1447 Crs
2715 886 Crs
3036 761 Crs
3358 693 Crs
3680 618 Crs
5343 2719 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.93 0.00 0.00 C
LCb setrgbcolor
5024 2559 M
[ [(Helvetica) 160.0 0.0 true true 0 (mmap, Nth=3)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UP
1.000 UL
LTb
0.93 0.00 0.00 C
5120 2559 M
447 0 V
784 2085 M
322 -218 V
322 7 V
321 -108 V
322 -177 V
322 -489 V
2715 818 L
3036 670 L
322 21 V
322 -40 V
784 2085 Star
1106 1867 Star
1428 1874 Star
1749 1766 Star
2071 1589 Star
2393 1100 Star
2715 818 Star
3036 670 Star
3358 691 Star
3680 651 Star
5343 2559 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LTb
0.93 0.67 0.00 C
LCb setrgbcolor
5024 2399 M
[ [(Helvetica) 160.0 0.0 true true 0 (mmap, Nth=4)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UP
1.000 UL
LTb
0.93 0.67 0.00 C
5120 2399 M
447 0 V
784 1966 M
322 -185 V
322 -43 V
321 -145 V
322 -275 V
2393 926 L
2715 749 L
3036 649 L
322 -24 V
322 26 V
784 1966 Box
1106 1781 Box
1428 1738 Box
1749 1593 Box
2071 1318 Box
2393 926 Box
2715 749 Box
3036 649 Box
3358 625 Box
3680 651 Box
5343 2399 Box
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LTb
[5.0 dl1 5.0 dl2 ] 0 setdash
0.00 0.00 1.00 C
LCb setrgbcolor
5024 2239 M
[ [(Helvetica) 160.0 0.0 true true 0 (write, Nth=1)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UP
1.000 UL
LTb
[5.0 dl1 5.0 dl2 ] 0 setdash
0.00 0.00 1.00 C
5120 2239 M
447 0 V
784 2185 M
322 -51 V
322 250 V
321 -223 V
322 384 V
322 -478 V
322 499 V
321 -578 V
322 553 V
322 -480 V
784 2185 Pls
1106 2134 Pls
1428 2384 Pls
1749 2161 Pls
2071 2545 Pls
2393 2067 Pls
2715 2566 Pls
3036 1988 Pls
3358 2541 Pls
3680 2061 Pls
5343 2239 Pls
% End plot #5
% Begin plot #6
1.000 UP
1.000 UL
LTb
[5.0 dl1 5.0 dl2 ] 0 setdash
0.93 0.00 0.93 C
LCb setrgbcolor
5024 2079 M
[ [(Helvetica) 160.0 0.0 true true 0 (write, Nth=2)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UP
1.000 UL
LTb
[5.0 dl1 5.0 dl2 ] 0 setdash
0.93 0.00 0.93 C
5120 2079 M
447 0 V
784 2683 M
322 -425 V
322 377 V
321 -410 V
322 258 V
322 -222 V
322 199 V
321 -160 V
322 174 V
322 -110 V
784 2683 Crs
1106 2258 Crs
1428 2635 Crs
1749 2225 Crs
2071 2483 Crs
2393 2261 Crs
2715 2460 Crs
3036 2300 Crs
3358 2474 Crs
3680 2364 Crs
5343 2079 Crs
% End plot #6
% Begin plot #7
1.000 UP
1.000 UL
LTb
[5.0 dl1 5.0 dl2 ] 0 setdash
0.93 0.00 0.00 C
LCb setrgbcolor
5024 1919 M
[ [(Helvetica) 160.0 0.0 true true 0 (write, Nth=3)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UP
1.000 UL
LTb
[5.0 dl1 5.0 dl2 ] 0 setdash
0.93 0.00 0.00 C
5120 1919 M
447 0 V
784 2403 M
322 26 V
322 -207 V
321 334 V
322 -356 V
322 414 V
322 -503 V
321 554 V
322 -567 V
322 569 V
784 2403 Star
1106 2429 Star
1428 2222 Star
1749 2556 Star
2071 2200 Star
2393 2614 Star
2715 2111 Star
3036 2665 Star
3358 2098 Star
3680 2667 Star
5343 1919 Star
% End plot #7
% Begin plot #8
1.000 UP
1.000 UL
LTb
[5.0 dl1 5.0 dl2 ] 0 setdash
0.93 0.67 0.00 C
LCb setrgbcolor
5024 1759 M
[ [(Helvetica) 160.0 0.0 true true 0 (write, Nth=4)]
] -53.3 MRshow
/Helvetica findfont 160 scalefont setfont
1.000 UP
1.000 UL
LTb
[5.0 dl1 5.0 dl2 ] 0 setdash
0.93 0.67 0.00 C
5120 1759 M
447 0 V
784 1985 M
322 419 V
322 -382 V
321 354 V
322 -181 V
322 -7 V
322 11 V
321 -8 V
322 100 V
322 -210 V
784 1985 Box
1106 2404 Box
1428 2022 Box
1749 2376 Box
2071 2195 Box
2393 2188 Box
2715 2199 Box
3036 2191 Box
3358 2291 Box
3680 2081 Box
5343 1759 Box
% End plot #8
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
784 2959 N
784 512 L
2896 0 V
0 2447 V
-2896 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
